Index: templates/Stats/stats_listener.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/stats_listener.html b/templates/Stats/DashStats/stats_listener.html
rename from templates/Stats/stats_listener.html
rename to templates/Stats/DashStats/stats_listener.html
--- a/templates/Stats/stats_listener.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Stats/DashStats/stats_listener.html	(date 1655993109302)
@@ -19,7 +19,7 @@
 
             @media (min-width: 768px) {
                 .bd-placeholder-img-lg {
-                    font-size: 3.5rem;
+                    font-size: 5rem;
                 }
             }
         </style>
@@ -28,30 +28,31 @@
     <!-- Custom styles for this template -->
     <link href="templates/Stats/dashboard.rlt.css" rel="stylesheet">
     <link href="templates/Stats/dashboard.css" rel="stylesheet">
-    <script type="text/javascript" src="dashboard.js"></script>
+    <script type="text/javascript" src="../dashboard.js"></script>
 </head>
 <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
 <body>
-<header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
-    <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="{{ url_for('index') }}">Unify</a>
-    <button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-bs-toggle="collapse"
-            data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false"
-            aria-label="Toggle navigation">
-        <span class="navbar-toggler-icon"></span>
-    </button>
+<nav class="navbar navbar-expand-lg navbar-light bg-light shadow">
+    <div class="container-fluid">
+        <a class="navbar-brand" href="{{ url_for('index') }}">Unify</a>
+            <div class="dropdown">
+                <button class="btn btn-outline-dark dropdown-toggle" type="button" id="lol"
+                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    {{ current_user.name }}
+                </button>
+                <div class="dropdown-menu" aria-labelledby="lol">
 
-    <div class="navbar-nav">
-        <div class="nav-item text-nowrap">
-            <a class="nav-link px-3" href="{{ url_for('logout') }}">Logout</a>
-        </div>
+                    <a class="dropdown-item" href="{{ url_for('logout') }}">Logout</a>
+                </div>
+            </div>
     </div>
-</header>
+</nav>
 <div class="container-fluid">
     <div class="row">
-        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse">
+        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse shadow">
             <div class="position-sticky pt-3">
                 <ul class="nav flex-column">
-                    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
+                    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-1 mt-4 mb-1 text-muted">
                         <span>Statistics</span>
                         <a class="link-secondary" href="#" aria-label="Add a new report">
                             <span data-feather="plus-circle"></span>
@@ -59,25 +60,25 @@
                     </h6>
                     <li class="nav-item">
                         <a class="nav-link" href="{{ url_for('types_stats') }}">
-                            <span data-feather="file"></span>
+                            <span data-feather="Type"></span>
                             Type
                         </a>
                     </li>
                     <li class="nav-item">
                         <a class="nav-link" href="{{ url_for('artists_stats') }}">
-                            <span data-feather="shopping-cart"></span>
+                            <span data-feather="Artists"></span>
                             Artists
                         </a>
                     </li>
                     <li class="nav-item">
                         <a class="nav-link" href="{{ url_for('songs_stats') }}">
-                            <span data-feather="users"></span>
+                            <span data-feather="Songs"></span>
                             Songs
                         </a>
                     </li>
                     <li class="nav-item">
                         <a class="nav-link" href="{{ url_for('playlists_stats') }}">
-                            <span data-feather="bar-chart-2"></span>
+                            <span data-feather="Playlists"></span>
                             Playlists
                         </a>
                     </li>
@@ -98,7 +99,7 @@
 <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
         integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
         crossorigin="anonymous"></script>
-<script src="dashboard.js"></script>
+<script src="../dashboard.js"></script>
 <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
         integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
         crossorigin="anonymous"></script>
@@ -114,6 +115,10 @@
 <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
         integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous">
 </script>
-<script src="dashboard.js"></script>
+<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
+    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
+    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
+
+<script src="../dashboard.js"></script>
 </body>
 </html>
\ No newline at end of file
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DataSourceManagerImpl\" format=\"xml\" multifile-model=\"true\">\n    <data-source source=\"LOCAL\" name=\"bd2progetto@localhost\" uuid=\"92802c42-970e-4061-9dae-02a1720ef550\">\n      <driver-ref>postgresql</driver-ref>\n      <synchronize>true</synchronize>\n      <jdbc-driver>org.postgresql.Driver</jdbc-driver>\n      <jdbc-url>jdbc:postgresql://localhost:5432/bd2progetto</jdbc-url>\n      <working-dir>$ProjectFileDir$</working-dir>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
--- a/.idea/dataSources.xml	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/.idea/dataSources.xml	(date 1655816251377)
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
-    <data-source source="LOCAL" name="bd2progetto@localhost" uuid="92802c42-970e-4061-9dae-02a1720ef550">
+    <data-source source="LOCAL" name="postgres@localhost" uuid="3dc41d0b-202b-49e8-8e8c-15cf0147ff1b">
       <driver-ref>postgresql</driver-ref>
       <synchronize>true</synchronize>
       <jdbc-driver>org.postgresql.Driver</jdbc-driver>
-      <jdbc-url>jdbc:postgresql://localhost:5432/bd2progetto</jdbc-url>
+      <jdbc-url>jdbc:postgresql://localhost:5432/postgres</jdbc-url>
       <working-dir>$ProjectFileDir$</working-dir>
     </data-source>
   </component>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.10 (progetto)\" project-jdk-type=\"Python SDK\" />\r\n  <component name=\"PyPackaging\">\r\n    <option name=\"earlyReleasesAsUpgrades\" value=\"true\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/.idea/misc.xml	(date 1655816032402)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (progetto)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8" project-jdk-type="Python SDK" />
   <component name="PyPackaging">
     <option name="earlyReleasesAsUpgrades" value="true" />
   </component>
Index: auth.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from stats import *\nfrom struttura_db import *\n\n\n@app.route('/')  # Splashpage\ndef index():\n    if current_user.is_authenticated:  # Se l'utente è autenticato\n        return redirect(url_for('home'))  # Lo mando alla home\n    else:\n        return redirect(url_for('login'))  # ALtrimenti lo faccio loggare\n\n\n#----------------------------------------------------Login--------------------------------------------------------------\n#Da fare: implementare l'hashing della password, fare differenza tra un listener e un artist quando questo si logga\n\n\n@app.route(\"/login\", methods=['GET', 'POST'])\ndef login():\n    if request.method == 'POST':\n        user = db.session.query(Users).filter(Users.mail == request.form['mail']).first()  # Controllo se la mail dell'user sta nel db, ergo se l'utente è registrato\n\n        if user:  # Se effettivamente c'è un user registrato con quella mail\n            user_real_pwd = db.session.query(Users).filter(Users.mail == request.form['mail']).first().pwd  # Mi faccio dare la pwd dell'utente\n\n            if user_real_pwd is not None:\n                if request.form['pwd'] == user_real_pwd:  # Controllo se la pwd del form è uguale a quella nel db\n                    user = db.session.query(Users).filter(Users.mail == request.form['mail']).first()  # Mi faccio ritornare un oggetto di tipo user con tutti i campi\n                    login_user(user)  # Loggo l'utente\n\n                    return redirect(url_for('home'))\n                else:\n                    flash('E-mail - password combination is wrong!', category='error')\n\n            return redirect(url_for('login'))\n\n        else:\n            flash('No user with that e-mail is registered', category='error')\n\n            return redirect(url_for('login'))\n\n    return render_template('Sign/login.html')\n#----------------------------------------------------Homepage-----------------------------------------------------------\n\n\n@app.route(\"/home\", methods=['GET', 'POST'])\n@login_required\ndef home():\n    return render_template('Home/home.html')\n#----------------------------------------------------Signup-------------------------------------------------------------\n\n\n@app.route(\"/signup\")\ndef signup():\n    return render_template('Sign/signup.html')\n\n\n@app.route(\"/signup_listener\", methods=['GET', 'POST'])\ndef signup_listener():\n    if request.method == 'POST':\n\n        name = request.form['name']\n        surname = request.form['surname']\n        sex = request.form['sex']\n        mail = request.form['mail']\n        pwd = request.form['pwd']\n        birth_date = request.form['birth_date']\n\n        user = Users(name, surname, sex, mail, pwd, birth_date)\n        check = db.session.query(Users).filter(Users.mail == request.form['mail']).first()\n\n        if request.form['pwd_repeat'] == user.pwd:#Se le password sono uguali procedo con l'inserimento\n\n            if user.mail and not check:#Se la mail c'è e non è già stata usata da un altro user\n                db.session.add(user)  # Aggiungo l'user da inserire\n                db.session.commit()  # Apporto effettivamente l'INSERT del database\n            else:#Altrimenti lo avviso che non va bene\n                flash('Mail already in use!', category='error')\n\n            return redirect(url_for('login'))\n        else:#Altrimenti avviso che non combaciano!\n            flash(\"\"\"Passwords don't coincide!\"\"\", category='error')\n\n    return render_template('Sign/signup_listener.html')\n\n\n@app.route(\"/signup_artist\", methods=['GET', 'POST'])\ndef signup_artist():\n    if request.method == 'POST':\n        name = request.form['name']\n        surname = request.form['surname']\n        sex = request.form['sex']\n        mail = request.form['mail']\n        pwd = request.form['pwd']\n        birth_date = request.form['birth_date']\n\n        user = Users(name, surname, sex, mail, pwd, birth_date)\n        check = db.session.query(Users).filter(Users.mail == request.form['mail']).first()\n\n        if request.form['pwd_repeat'] == user.pwd:#Se le password sono uguali procedo con l'inserimento\n\n            if user.mail and not check:#Se la mail c'è e non è già stata usata da un altro user\n                db.session.add(user)  # Aggiungo l'user da inserire\n                db.session.commit()  # Apporto effettivamente l'INSERT del database\n                #Aggiungo la parte su artist\n                art_name = request.form['art_name']\n                label = request.form['label']\n                artist = Artists(user.id_users,art_name, label)\n                db.session.add(artist)\n                db.session.commit()\n            else:#Altrimenti lo avviso che non va bene\n                flash('Mail already in use!', category='error')\n\n            return redirect(url_for('login'))\n        else:#Altrimenti avviso che non combaciano!\n            flash(\"\"\"Passwords don't coincide!\"\"\", category='error')\n\n    return render_template('Sign/signup_artist.html')\n#----------------------------------------------------Logout-------------------------------------------------------------\n\n\n@app.route('/logout', methods=['GET', 'POST'])\n@login_required\ndef logout():\n    logout_user()\n    return redirect(url_for('login'))\n#---------------------------------------------------Profile page--------------------------------------------------------\n\n\n@app.route('/profile')\n@login_required\ndef profile():\n    user = current_user\n    print(user.name)\n\n    return render_template('Sign/profile.html', user=user)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/auth.py b/auth.py
--- a/auth.py	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/auth.py	(date 1655903439395)
@@ -1,6 +1,6 @@
-from stats import *
+
 from struttura_db import *
-
+from stats import *
 
 @app.route('/')  # Splashpage
 def index():
@@ -133,3 +133,11 @@
     print(user.name)
 
     return render_template('Sign/profile.html', user=user)
+
+def is_artist():
+    art = db.session.query(Artists).filter(Artists.id_artists == current_user.id_users)
+    if art:
+        return True
+    return  False
+
+
Index: views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from app import *\nfrom auth import *\nfrom stats import *\nfrom struttura_db import *\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/views.py b/views.py
--- a/views.py	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/views.py	(date 1655889988874)
@@ -2,3 +2,4 @@
 from auth import *
 from stats import *
 from struttura_db import *
+from artist import *
Index: templates/Stats/DashStats/songs.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n{% extends \"Stats/stats_listener.html\" %}\n\n{% block lol %}\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Statistics</h1>\n        </div>\n\n        <canvas class=\"my-4 w-100\" id=\"myChart\" width=\"900\" height=\"380\"></canvas>\n        <script type=\"text/javascript\">\n            const song = {{ songs_name | tojson }};\n            const lol = JSON.parse(song);\n            new Chart(\"myChart\", {\n                type: 'line',\n                data: {\n                    labels: lol,\n                    datasets: [{\n                        data: [{{ number | join(', ') }}],\n                        lineTension: 0,\n                        backgroundColor: 'transparent',\n                        borderColor: '#007bff',\n                        borderWidth: 4,\n                        pointBackgroundColor: '#007bff'\n                    }]\n                },\n                options: {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: false\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    }\n                }\n            });\n        </script>\n\n        <h2>Songs List</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped table-sm\">\n                <thead>\n                <tr>\n                    {% for header in headings %}\n                        <th>{{ header }}</th>\n                    {% endfor %}\n                </tr>\n                {% for row in data %}\n                    <tr>\n                        {% for cell in row %}\n                            <td>{{ cell }}</td>\n                        {% endfor %}\n                    </tr>\n                {% endfor %}\n                </thead>\n            </table>\n        </div>\n    </main>\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/DashStats/songs.html b/templates/Stats/DashStats/songs.html
--- a/templates/Stats/DashStats/songs.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Stats/DashStats/songs.html	(date 1655929588640)
@@ -1,5 +1,5 @@
 
-{% extends "Stats/stats_listener.html" %}
+{% extends "Stats/DashStats/stats_listener.html" %}
 
 {% block lol %}
     <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
Index: stats.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import json\n\nimport auth\nfrom app import *\nfrom auth import *\nfrom struttura_db import *\n\nuser = current_user\n\n# ---------------------------------------------------Stats page---------------------------------------------------------\n\n\ndef take_song(id_songs):\n    song = db.session.query(Songs).filter(Songs.id_songs == id_songs).first()\n    return song\n\n\ndef take_artist(id_songs):\n    song = take_song(id_songs)\n    artist = db.session.query(Artists).filter(Artists.id_artists == song.id_artist).first()\n    return artist\n\n\n@app.route('/stats_listener', methods=['GET', 'POST'])\ndef stats_listener():\n    return render_template('Stats/stats_listener.html', headings=headings, data=data)\n\n\n# ---------------------------------------------------Songs Stats--------------------------------------------------------\n\n@app.route('/songs_stats', methods=['GET', 'POST'])\ndef songs_stats():\n    title = (\"Title\", \"length\", \"Date\", \"Type\")\n\n    song_list = ()\n    sl = db.session.query(SongsListened).order_by(SongsListened.id_users)\n    number = []\n    songs_name = []\n    for s in sl:\n        if s.id_users == user.id_users:\n            song_tmp = []\n            prova = take_song(s.id_songs)\n            song_tmp.append(prova.title)\n            song_tmp.append(prova.length)\n            song_tmp.append(prova.date_pub)\n            song_tmp.append(prova.type)\n            list_tmp = list(song_list)\n            list_tmp.append(song_tmp)\n            song_list = tuple(list_tmp)\n\n            song = take_song(s.id_songs)\n            songs_name.append(song.title)\n            number.append(s.num_times)\n\n    return render_template('Stats/DashStats/songs.html', headings=title, data=song_list, number=number,\n                           songs_name=json.dumps(songs_name))\n\n\n# ---------------------------------------------------Artists Stats------------------------------------------------------\n\n\ndef exists_artist(artist_id, id):\n    for artist in artist_id:\n        if artist == id:\n            return False\n    return True\n\n\ndef count_artist(artist_id, id):\n    count = 0\n    for artist in artist_id:\n        prova = take_song(artist.id_songs)\n        if prova.id_artist == id:\n            count = count + artist.num_times\n    return count\n\n\n@app.route('/artists_stats', methods=['GET', 'POST'])\ndef artists_stats():\n    title = ('Name', 'Label', 'Last Time')\n    artists_list = ()\n    artis_listened = db.session.query(SongsListened).filter(SongsListened.id_users == user.id_users)\n    artist_id = []\n    count_times = []\n    artists_name = []\n    for artists in artis_listened:\n\n        listened = []\n        prova = take_artist(artists.id_songs)\n\n        if exists_artist(artist_id, prova.id_artists):\n            list_tmp = list(artists_list)\n            artist_id.append(prova.id_artists)\n            count_times.append(count_artist(artis_listened, prova.id_artists))\n            artists_name.append(prova.art_name)\n\n            listened.append(prova.art_name)\n            listened.append(prova.label)\n            listened.append(artists.date_list)\n\n            list_tmp.append(listened)\n            artists_list = tuple(list_tmp)\n\n    return render_template('Stats/DashStats/artists.html', headings=title, data=artists_list,\n                           number=count_times, songs_name=json.dumps(artists_name))\n\n\n# ---------------------------------------------------Playlists Stats----------------------------------------------------\n\ndef exist_playlist(playlist_id, id):\n    for playlist in playlist_id:\n        if playlist == id:\n            return False\n    return True\n\n\ndef take_playlist(id):\n    prova = db.session.query(Playlist)\n\n    for p in prova:\n        if p.id_playlist == id:\n            return p\n\n    return 0\n\n\n@app.route('/playlists_stats', methods=['GET', 'POST'])\ndef playlists_stats():\n    headings = ['Name', 'Date Creation']\n    playlist_listened = db.session.query(PlaylistUsers).filter(PlaylistUsers.id_users == user.id_users)\n    playlist_list = ()\n    playlist_id = []\n    for playlist in playlist_listened:\n        listened = []\n        prova = take_playlist(playlist.id_playlist)\n        if exist_playlist(listened, playlist.id_playlist):\n            list_tmp = list(playlist_list)\n            listened.append(prova.name)\n            listened.append(prova.date_creation)\n            playlist_id.append(playlist.id_playlist)\n\n            list_tmp.append(listened)\n            playlist_list = tuple(list_tmp)\n\n    return render_template('Stats/DashStats/playlists.html', headings=headings, data=playlist_list,\n                           number=[], songs_name=json.dumps(playlist_id))\n\n\n# ---------------------------------------------------Type Stats--------------------------------------------------------\n\ndef type_exists(type_list, type):\n    for t in type_list:\n        if t == type:\n            return False\n    return True\n\n\ndef count_type(type_name, name):\n    count = 0\n    for type in type_name:\n        prova = take_song(type.id_songs)\n        if prova.type == name:\n            count = count + type.num_times\n    return count\n\n\n@app.route('/types_stats', methods=['GET', 'POST'])\ndef types_stats():\n    title = ['Name', 'Last Time']\n    types_list = ()\n    types_listened = db.session.query(SongsListened).filter(SongsListened.id_users == user.id_users)\n    type_name = []\n    count = []\n\n    for type in types_listened:\n        listened = []\n        prova = take_song(type.id_songs)\n        if type_exists(type_name, prova.type):\n            list_tmp = list(types_list)\n            type_name.append(prova.type)\n            count.append(count_type(types_listened, prova.type))\n            listened.append(prova.type)\n            listened.append(type.date_list)\n            list_tmp.append(listened)\n            types_list = tuple(list_tmp)\n\n    return render_template('Stats/DashStats/types.html', headings=title, data=types_list,\n                           number=count, songs_name=json.dumps(type_name))\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/stats.py b/stats.py
--- a/stats.py	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/stats.py	(date 1655890459175)
@@ -4,11 +4,20 @@
 from app import *
 from auth import *
 from struttura_db import *
+from artist import *
 
 user = current_user
 
 # ---------------------------------------------------Stats page---------------------------------------------------------
+def is_artist():
+    art = db.session.query(Artists).filter(Artists.id_artists == current_user.id_users)
+    count = 0
+    for a in art:
+        count = count + 1
 
+    if count >= 1:
+        return True
+    return False
 
 def take_song(id_songs):
     song = db.session.query(Songs).filter(Songs.id_songs == id_songs).first()
@@ -21,11 +30,6 @@
     return artist
 
 
-@app.route('/stats_listener', methods=['GET', 'POST'])
-def stats_listener():
-    return render_template('Stats/stats_listener.html', headings=headings, data=data)
-
-
 # ---------------------------------------------------Songs Stats--------------------------------------------------------
 
 @app.route('/songs_stats', methods=['GET', 'POST'])
@@ -53,7 +57,7 @@
             number.append(s.num_times)
 
     return render_template('Stats/DashStats/songs.html', headings=title, data=song_list, number=number,
-                           songs_name=json.dumps(songs_name))
+                           songs_name=json.dumps(songs_name), artist_b=is_artist())
 
 
 # ---------------------------------------------------Artists Stats------------------------------------------------------
@@ -102,7 +106,7 @@
             artists_list = tuple(list_tmp)
 
     return render_template('Stats/DashStats/artists.html', headings=title, data=artists_list,
-                           number=count_times, songs_name=json.dumps(artists_name))
+                           number=count_times, songs_name=json.dumps(artists_name), artist_b=is_artist())
 
 
 # ---------------------------------------------------Playlists Stats----------------------------------------------------
@@ -143,7 +147,7 @@
             playlist_list = tuple(list_tmp)
 
     return render_template('Stats/DashStats/playlists.html', headings=headings, data=playlist_list,
-                           number=[], songs_name=json.dumps(playlist_id))
+                           number=[], songs_name=json.dumps(playlist_id), artist_b=is_artist())
 
 
 # ---------------------------------------------------Type Stats--------------------------------------------------------
@@ -185,4 +189,8 @@
             types_list = tuple(list_tmp)
 
     return render_template('Stats/DashStats/types.html', headings=title, data=types_list,
-                           number=count, songs_name=json.dumps(type_name))
+                           number=count, songs_name=json.dumps(type_name), artist_b=is_artist())
+
+
+# --------------------------------------------------------------------------------------------------------------------
+
Index: templates/Stats/DashStats/artists.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n{% extends \"Stats/stats_listener.html\" %}\n\n{% block lol %}\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Statistics</h1>\n        </div>\n\n        <canvas class=\"my-4 w-100\" id=\"myChart\" width=\"900\" height=\"380\"></canvas>\n        <script>\n            const song = {{ songs_name | tojson }};\n            const lol = JSON.parse(song);\n            new Chart(\"myChart\", {\n                type: 'line',\n                data: {\n                    labels: lol,\n                    datasets: [{\n                        data: [{{ number | join(', ') }}],\n                        lineTension: 0,\n                        backgroundColor: 'transparent',\n                        borderColor: '#007bff',\n                        borderWidth: 4,\n                        pointBackgroundColor: '#007bff'\n                    }]\n                },\n                options: {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: false\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    }\n                }\n            });\n        </script>\n\n        <h2>Artist List</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped table-sm\">\n                <thead>\n                <tr>\n                    {% for header in headings %}\n                        <th>{{ header }}</th>\n                    {% endfor %}\n                </tr>\n                {% for row in data %}\n                    <tr>\n                        {% for cell in row %}\n                            <td>{{ cell }}</td>\n                        {% endfor %}\n                    </tr>\n                {% endfor %}\n                </thead>\n            </table>\n        </div>\n    </main>\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/DashStats/artists.html b/templates/Stats/DashStats/artists.html
--- a/templates/Stats/DashStats/artists.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Stats/DashStats/artists.html	(date 1655891769544)
@@ -1,5 +1,5 @@
 
-{% extends "Stats/stats_listener.html" %}
+{% extends "Stats/DashStats/stats_listener.html" %}
 
 {% block lol %}
     <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
Index: struttura_db.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, redirect, url_for, request, flash\nfrom flask_login import *\nfrom flask_sqlalchemy import SQLAlchemy\n\napp = Flask(__name__)\n\napp.config['SECRET_KEY'] = 'ninninu'\n\n# Radu\n#app.config['SQLALCHEMY_DATABASE_URI'] = \"postgresql://postgres:zxcvbnm@localhost:5432/db_progetto\"\n# Lorenzo\n#app.config['SQLALCHEMY_DATABASE_URI'] = \"postgresql://postgres:A1n3m3d123!@localhost:5432/bd2_proj\"\n# Daniele\napp.config['SQLALCHEMY_DATABASE_URI'] = \"postgresql://postgres:Internet10@localhost:5432/bd2progetto\"\n\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\n\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = \"login\"\n\n\ndb = SQLAlchemy(app)\n\n\n@login_manager.user_loader\ndef load_user(id_users):\n    user = db.session.query(Users).filter(Users.id_users == id_users).first()\n\n    return user\n\n\nclass Users(UserMixin, db.Model):\n    id_users = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String)\n    surname = db.Column(db.String)\n    sex = db.Column(db.String)\n    mail = db.Column(db.String, unique=True)\n    pwd = db.Column(db.String)\n    birth_date = db.Column(db.Date)\n    authenticated = db.Column(db.Boolean, default=False)\n\n    def __init__(self, name, surname, sex, mail, pwd, birth_date):\n        self.name = name\n        self.surname = surname\n        self.sex = sex\n        self.mail = mail\n        self.pwd = pwd\n        self.birth_date = birth_date\n\n    def get_id(self):\n        return self.id_users\n\n\nclass Artists(db.Model):\n    id_artists = db.Column(db.Integer, db.ForeignKey('users.id_users'), primary_key=True, )\n    art_name = db.Column(db.String)\n    label = db.Column(db.String)\n\n    def __init__(self, id_artists, art_name, label):\n        self.id_artists = id_artists\n        self.art_name = art_name\n        self.label = label\n\n\nclass Songs(db.Model):\n    id_songs = db.Column(db.Integer, primary_key=True)\n    id_artist = db.Column(db.Integer, db.ForeignKey('artists.id_artists'))\n    title = db.Column(db.String)\n    length = db.Column(db.Integer)\n    date_pub = db.Column(db.Date)\n    type = db.Column(db.String)\n\n    def __init__(self, id_songs, id_artists, title, length, date_pub, type):\n        self.id_artist = id_artists\n        self.id_songs = id_songs\n        self.title = title\n        self.length = length\n        self.date_pub = date_pub\n        self.type = type\n\n\nclass Playlist(db.Model):\n    id_playlist = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String)\n    description = db.Column(db.String)\n    date_creation = db.Column(db.Date)\n    private = db.Column(db.Boolean, default=False)\n\n    def __init__(self, id_playlist, name, description, date_creation, private):\n        self.id_playlist = id_playlist\n        self.name = name\n        self.description = description\n        self.date_creation = date_creation\n        self.private = private\n\n\nclass Album(db.Model):\n    id_album = db.Column(db.Integer, primary_key=True)\n    id_artist = db.Column(db.Integer, db.ForeignKey('artists.id_artists'))\n    date_pub = db.Column(db.Date)\n    title = db.Column(db.String)\n\n    def __init__(self, id_album, id_artist, date_pub, title):\n        self.id_album = id_album\n        self.id_artist = id_artist\n        self.date_pub = date_pub\n        self.title = title\n\n\nclass PlaylistSongs(db.Model):\n    id_songs = db.Column(db.Integer, db.ForeignKey('songs.id_songs'), primary_key=True)\n    id_playlist = db.Column(db.Integer, db.ForeignKey('playlist.id_playlist'), primary_key=True)\n\n    def __init__(self, id_songs, id_playlist):\n        self.id_songs = id_songs\n        self.id_playlist = id_playlist\n\n\nclass PlaylistUsers(db.Model):\n    id_users = db.Column(db.Integer, db.ForeignKey('users.id_users'), primary_key=True)\n    id_playlist = db.Column(db.Integer, db.ForeignKey('playlist.id_playlist'), primary_key=True)\n\n    def __init__(self, id_users, id_playlist):\n        self.id_users = id_users\n        self.id_playlist = id_playlist\n\n\nclass SongsAlbum(db.Model):\n    id_songs = db.Column(db.Integer, db.ForeignKey('songs.id_songs'), primary_key=True)\n    id_album = db.Column(db.Integer, db.ForeignKey('album.id_album'), primary_key=True)\n\n    def __init__(self, id_songs, id_album):\n        self.id_songs = id_songs\n        self.id_album = id_album\n\n\nclass SongsListened(db.Model):\n    id_songs = db.Column(db.Integer, db.ForeignKey('songs.id_songs'), primary_key=True)\n    id_users = db.Column(db.Integer, db.ForeignKey('users.id_users'), primary_key=True)\n    num_times = db.Column(db.Integer)\n    date_list = db.Column(db.Date)\n\n    def __init__(self, id_songs, id_users, num_times, date_list):\n        self.id_songs = id_songs\n        self.id_users = id_users\n        self.num_times = num_times\n        self.date_list = date_list\n\n\ndb.create_all()\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/struttura_db.py b/struttura_db.py
--- a/struttura_db.py	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/struttura_db.py	(date 1655816251009)
@@ -7,11 +7,11 @@
 app.config['SECRET_KEY'] = 'ninninu'
 
 # Radu
-#app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:zxcvbnm@localhost:5432/db_progetto"
+# app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:zxcvbnm@localhost:5432/db_progetto"
 # Lorenzo
-#app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:A1n3m3d123!@localhost:5432/bd2_proj"
+app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:A1n3m3d123!@localhost:5432/bd2_proj"
 # Daniele
-app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:Internet10@localhost:5432/bd2progetto"
+# app.config['SQLALCHEMY_DATABASE_URI'] = "postgresql://postgres:Internet10@localhost:5432/bd2progetto"
 
 app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
 
Index: templates/Stats/DashStats/playlists.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n\n{% extends \"Stats/stats_listener.html\" %}\n\n{% block lol %}\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Statistics</h1>\n        </div>\n\n        <canvas class=\"my-4 w-100\" id=\"myChart\" width=\"900\" height=\"380\"></canvas>\n        <script>\n            const song = {{ songs_name | tojson }};\n            const lol = JSON.parse(song);\n            new Chart(\"myChart\", {\n                type: 'line',\n                data: {\n                    labels: lol,\n                    datasets: [{\n                        data: [{{ number | join(', ') }}],\n                        lineTension: 0,\n                        backgroundColor: 'transparent',\n                        borderColor: '#007bff',\n                        borderWidth: 4,\n                        pointBackgroundColor: '#007bff'\n                    }]\n                },\n                options: {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: false\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    }\n                }\n            });\n        </script>\n\n        <h2>Playlist List</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped table-sm\">\n                <thead>\n                <tr>\n                    {% for header in headings %}\n                        <th>{{ header }}</th>\n                    {% endfor %}\n                </tr>\n                {% for row in data %}\n                    <tr>\n                        {% for cell in row %}\n                            <td>{{ cell }}</td>\n                        {% endfor %}\n                    </tr>\n                {% endfor %}\n                </thead>\n            </table>\n        </div>\n    </main>\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/DashStats/playlists.html b/templates/Stats/DashStats/playlists.html
--- a/templates/Stats/DashStats/playlists.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Stats/DashStats/playlists.html	(date 1655891769539)
@@ -1,6 +1,6 @@
 
 
-{% extends "Stats/stats_listener.html" %}
+{% extends "Stats/DashStats/stats_listener.html" %}
 
 {% block lol %}
     <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
Index: templates/Stats/DashStats/types.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\n\n{% extends \"Stats/stats_listener.html\" %}\n\n{% block lol %}\n    <main class=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n        <div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n            <h1 class=\"h2\">Statistics</h1>\n        </div>\n\n        <canvas class=\"my-4 w-100\" id=\"myChart\" width=\"900\" height=\"380\"></canvas>\n        <script>\n            const song = {{ songs_name | tojson }};\n            const lol = JSON.parse(song);\n            new Chart(\"myChart\", {\n                type: 'line',\n                data: {\n                    labels: lol,\n                    datasets: [{\n                        data: [{{ number | join(', ') }}],\n                        lineTension: 0,\n                        backgroundColor: 'transparent',\n                        borderColor: '#007bff',\n                        borderWidth: 4,\n                        pointBackgroundColor: '#007bff'\n                    }]\n                },\n                options: {\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: false\n                            }\n                        }]\n                    },\n                    legend: {\n                        display: false\n                    }\n                }\n            });\n        </script>\n\n        <h2>Type List</h2>\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped table-sm\">\n                <thead>\n                <tr>\n                    {% for header in headings %}\n                        <th>{{ header }}</th>\n                    {% endfor %}\n                </tr>\n                {% for row in data %}\n                    <tr>\n                        {% for cell in row %}\n                            <td>{{ cell }}</td>\n                        {% endfor %}\n                    </tr>\n                {% endfor %}\n                </thead>\n            </table>\n        </div>\n    </main>\n\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/DashStats/types.html b/templates/Stats/DashStats/types.html
--- a/templates/Stats/DashStats/types.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Stats/DashStats/types.html	(date 1655891769550)
@@ -1,6 +1,6 @@
 
 
-{% extends "Stats/stats_listener.html" %}
+{% extends "Stats/DashStats/stats_listener.html" %}
 
 {% block lol %}
     <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
Index: app.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from auth import *\r\nfrom search import *\r\nfrom struttura_db import *\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.py b/app.py
--- a/app.py	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/app.py	(date 1655903515212)
@@ -1,6 +1,12 @@
 from auth import *
 from search import *
 from struttura_db import *
+from artist import *
+from auth import *
+
+
 
 if __name__ == '__main__':
+
     app.run()
+
Index: templates/Stats/Artist/albums_artist.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/Artist/albums_artist.html b/templates/Stats/Artist/albums_artist.html
new file mode 100644
--- /dev/null	(date 1655892429137)
+++ b/templates/Stats/Artist/albums_artist.html	(date 1655892429137)
@@ -0,0 +1,63 @@
+
+{% extends "Stats/Artist/stats_artist.html" %}
+
+{% block lol %}
+    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
+        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
+            <h1 class="h2">Top 10</h1>
+        </div>
+
+        <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
+        <script type="text/javascript">
+            const song = {{ songs_name | tojson }};
+            const lol = JSON.parse(song);
+            new Chart("myChart", {
+                type: 'line',
+                data: {
+                    labels: lol,
+                    datasets: [{
+                        data: [{{ number | join(', ') }}],
+                        lineTension: 0,
+                        backgroundColor: 'transparent',
+                        borderColor: '#007bff',
+                        borderWidth: 4,
+                        pointBackgroundColor: '#007bff'
+                    }]
+                },
+                options: {
+                    scales: {
+                        yAxes: [{
+                            ticks: {
+                                beginAtZero: false
+                            }
+                        }]
+                    },
+                    legend: {
+                        display: false
+                    }
+                }
+            });
+        </script>
+
+        <h2>Songs Ranking</h2>
+        <div class="table-responsive">
+            <table class="table table-striped table-sm">
+                <thead>
+                <tr>
+                    {% for header in headings %}
+                        <th>{{ header }}</th>
+                    {% endfor %}
+                </tr>
+                {% for row in data %}
+                    <tr>
+                        {% for cell in row %}
+                            <td>{{ cell }}</td>
+                        {% endfor %}
+                    </tr>
+                {% endfor %}
+                </thead>
+            </table>
+        </div>
+    </main>
+
+{% endblock %}
\ No newline at end of file
Index: templates/Home/navbar.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"{{ url_for('index') }}\">Unify</a>\n        {% if current_user.is_authenticated %}\n            <form class=\"d-flex\" method=\"POST\" action=\"{{ url_for('search') }}\">\n                <input class=\"form-control me-3\" id=\"search\" name=\"search\" type=\"search\" placeholder=\"Search\"\n                       aria-label=\"Search\">\n                <button class=\"btn btn-outline-success\" for=\"search\" type=\"submit\">Search</button>\n            </form>\n            <div class=\"dropdown\">\n                <button class=\"btn btn-outline-dark dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                    {{ current_user.name }}\n                </button>\n                <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                    <a class=\"dropdown-item\" href=\"{{ url_for('logout') }}\">Logout</a>\n                    <a class=\"dropdown-item\" href=\"{{ url_for('songs_stats') }}\">Statistiche</a>\n                    <a class=\"dropdown-item\" href=\"#\">A</a>\n                </div>\n            </div>\n\n        {% endif %}\n    </div>\n</nav>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Home/navbar.html b/templates/Home/navbar.html
--- a/templates/Home/navbar.html	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/templates/Home/navbar.html	(date 1655834483299)
@@ -1,4 +1,4 @@
-<nav class="navbar navbar-expand-lg navbar-light bg-light">
+<nav class="navbar navbar-expand-lg navbar-light bg-light shadow">
     <div class="container-fluid">
         <a class="navbar-brand" href="{{ url_for('index') }}">Unify</a>
         {% if current_user.is_authenticated %}
@@ -13,9 +13,8 @@
                     {{ current_user.name }}
                 </button>
                 <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
+                    <a class="dropdown-item" href="{{ url_for('songs_stats') }}">Stats</a>
                     <a class="dropdown-item" href="{{ url_for('logout') }}">Logout</a>
-                    <a class="dropdown-item" href="{{ url_for('songs_stats') }}">Statistiche</a>
-                    <a class="dropdown-item" href="#">A</a>
                 </div>
             </div>
 
Index: artist.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/artist.py b/artist.py
new file mode 100644
--- /dev/null	(date 1655904327844)
+++ b/artist.py	(date 1655904327844)
@@ -0,0 +1,101 @@
+import json
+
+from app import *
+from auth import *
+from struttura_db import *
+
+
+
+user = current_user
+
+# artist = db.session.query(Artists).filter(Artists.id_artists == user.id_users).first()
+
+def is_artist():
+    art = db.session.query(Artists).filter(Artists.id_artists == current_user.id_users)
+    count = 0
+    for a in art:
+        count = count +1
+
+    if count >= 1:
+        return True
+    return False
+
+
+def count_song(id_song):
+
+    song = db.session.query(SongsListened).filter(SongsListened.id_songs == id_song)
+    x = 0
+    for s in song:
+
+        x = x + s.num_times
+    return x
+
+
+def id_play():
+    playlist = db.session.query(Playlist).order_by(Playlist.id_playlist.desc()).first()
+    return playlist.id_playlist
+
+
+@app.route('/song_artist', methods=['GET', 'POST'])
+def song():
+
+    title = ("Title", "length", "Date", "Type", "Listened")
+    print(id_play())
+    sl = db.session.query(Songs).filter(Songs.id_artist == user.id_users)
+    number = []
+    songs_name = []
+    list_tmp = []
+    count = 0
+    for s in sl:
+        song_tmp = []
+        x = count_song(s.id_songs)
+        song_tmp.append(s.title)
+        song_tmp.append(s.length)
+        song_tmp.append(s.date_pub)
+        song_tmp.append(s.type)
+        song_tmp.append(x)
+        list_tmp.append(song_tmp)
+        if count <= 10:
+            songs_name.append(s.title)
+            number.append(x)
+        count = count + 1
+
+    list_tmp.sort(key=lambda x:x[4], reverse=True)
+    song_list = tuple(list_tmp)
+    return render_template('Stats/Artist/songs_artist.html', headings=title, data=song_list, number=number,
+                           songs_name=json.dumps(songs_name), artist_b=is_artist())
+
+
+@app.route('/album_artist', methods=['GET', 'POST'])
+def album():
+    title = ("Title", "length", "Date", "Type", "Listened")
+
+    sl = db.session.query(Songs).filter(Songs.id_artist == user.id_users)
+    number = []
+    songs_name = []
+    list_tmp = []
+    count = 0
+    for s in sl:
+        song_tmp = []
+        x = count_song(s.id_songs)
+        song_tmp.append(s.title)
+        song_tmp.append(s.length)
+        song_tmp.append(s.date_pub)
+        song_tmp.append(s.type)
+        song_tmp.append(x)
+        list_tmp.append(song_tmp)
+        if count <= 10:
+            songs_name.append(s.title)
+            number.append(x)
+        count = count + 1
+
+    list_tmp.sort(key=lambda x: x[4], reverse=True)
+    song_list = tuple(list_tmp)
+    return render_template('Stats/Artist/albums_artist.html', headings=title, data=song_list, number=number,
+                           songs_name=json.dumps(songs_name), artist_b=is_artist())
+
+
+
+@app.route('/art', methods=['GET', 'POST'])
+def default():
+    return render_template('Stats/Artist/stats_artist.html')
\ No newline at end of file
Index: templates/Stats/Artist/songs_artist.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/Artist/songs_artist.html b/templates/Stats/Artist/songs_artist.html
new file mode 100644
--- /dev/null	(date 1655891968619)
+++ b/templates/Stats/Artist/songs_artist.html	(date 1655891968619)
@@ -0,0 +1,63 @@
+
+{% extends "Stats/Artist/stats_artist.html" %}
+
+{% block lol %}
+    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
+        <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
+            <h1 class="h2">Top 10</h1>
+        </div>
+
+        <canvas class="my-4 w-100" id="myChart" width="900" height="380"></canvas>
+        <script type="text/javascript">
+            const song = {{ songs_name | tojson }};
+            const lol = JSON.parse(song);
+            new Chart("myChart", {
+                type: 'line',
+                data: {
+                    labels: lol,
+                    datasets: [{
+                        data: [{{ number | join(', ') }}],
+                        lineTension: 0,
+                        backgroundColor: 'transparent',
+                        borderColor: '#007bff',
+                        borderWidth: 4,
+                        pointBackgroundColor: '#007bff'
+                    }]
+                },
+                options: {
+                    scales: {
+                        yAxes: [{
+                            ticks: {
+                                beginAtZero: false
+                            }
+                        }]
+                    },
+                    legend: {
+                        display: false
+                    }
+                }
+            });
+        </script>
+
+        <h2>Songs Ranking</h2>
+        <div class="table-responsive">
+            <table class="table table-striped table-sm">
+                <thead>
+                <tr>
+                    {% for header in headings %}
+                        <th>{{ header }}</th>
+                    {% endfor %}
+                </tr>
+                {% for row in data %}
+                    <tr>
+                        {% for cell in row %}
+                            <td>{{ cell }}</td>
+                        {% endfor %}
+                    </tr>
+                {% endfor %}
+                </thead>
+            </table>
+        </div>
+    </main>
+
+{% endblock %}
\ No newline at end of file
Index: templates/Stats/Artist/stats_artist.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/Stats/Artist/stats_artist.html b/templates/Stats/Artist/stats_artist.html
new file mode 100644
--- /dev/null	(date 1655993254656)
+++ b/templates/Stats/Artist/stats_artist.html	(date 1655993254656)
@@ -0,0 +1,107 @@
+<!doctype html>
+<html lang="en">
+<head>
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
+
+
+    <!-- Bootstrap core CSS -->
+        <link href="../assets/dist/css/bootstrap.min.css" rel="stylesheet">
+
+        <style>
+            .bd-placeholder-img {
+                font-size: 1.125rem;
+                text-anchor: middle;
+                -webkit-user-select: none;
+                -moz-user-select: none;
+                user-select: none;
+            }
+
+            @media (min-width: 768px) {
+                .bd-placeholder-img-lg {
+                    font-size: 5rem;
+                }
+            }
+        </style>
+
+
+    <!-- Custom styles for this template -->
+    <link href="templates/Stats/dashboard.rlt.css" rel="stylesheet">
+    <link href="templates/Stats/dashboard.css" rel="stylesheet">
+    <script type="text/javascript" src="dashboard.js"></script>
+</head>
+<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
+<body>
+<nav class="navbar navbar-expand-lg navbar-light bg-light shadow">
+    <div class="container-fluid">
+        <a class="navbar-brand" href="{{ url_for('index') }}">Unify</a>
+            <div class="dropdown">
+                <button class="btn btn-outline-dark dropdown-toggle" type="button" id="lol"
+                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                    {{ current_user.name }}
+                </button>
+                <div class="dropdown-menu" aria-labelledby="lol">
+                    <a class="dropdown-item" href="{{ url_for('songs_stats') }}">Listener</a>
+                    <a class="dropdown-item" href="{{ url_for('logout') }}">Logout</a>
+                </div>
+            </div>
+    </div>
+</nav>
+<div class="container-fluid">
+    <div class="row">
+        <nav id="sidebarMenu" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse shadow">
+            <div class="position-sticky pt-3">
+                <ul class="nav flex-column">
+                    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
+                        <span>Statistics</span>
+                        <a class="link-secondary" href="#" aria-label="Add a new report">
+                            <span data-feather="plus-circle"></span>
+                        </a>
+                    </h6>
+                    <li class="nav-item">
+                        <a class="nav-link" href="{{ url_for('album_artist') }}">
+                            <span data-feather="Type"></span>
+                            Type
+                        </a>
+                    </li>
+
+                </ul>
+            </div>
+        </nav>
+
+        {% block lol %}
+
+        {% endblock %}
+    </div>
+</div>
+<script src="../assets/dist/js/bootstrap.bundle.min.js"></script>
+
+<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js"
+        integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE"
+        crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
+        integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
+        crossorigin="anonymous"></script>
+<script src="dashboard.js"></script>
+<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
+        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
+        crossorigin="anonymous"></script>
+<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
+        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
+        crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
+        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
+        crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js"
+        integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE"
+        crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
+        integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha" crossorigin="anonymous">
+</script>
+<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
+    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
+    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
+
+<script src="dashboard.js"></script>
+</body>
+</html>
\ No newline at end of file
Index: .idea/progetto.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"PYTHON_MODULE\" version=\"4\">\n  <component name=\"Flask\">\n    <option name=\"enabled\" value=\"true\" />\n  </component>\n  <component name=\"NewModuleRootManager\">\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.10 (progetto)\" jdkType=\"Python SDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n  <component name=\"PyDocumentationSettings\">\n    <option name=\"format\" value=\"PLAIN\" />\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\n  </component>\n  <component name=\"TemplatesService\">\n    <option name=\"TEMPLATE_CONFIGURATION\" value=\"Jinja2\" />\n    <option name=\"TEMPLATE_FOLDERS\">\n      <list>\n        <option value=\"$MODULE_DIR$/templates\" />\n      </list>\n    </option>\n  </component>\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/progetto.iml b/.idea/progetto.iml
--- a/.idea/progetto.iml	(revision 311e41bb3747a514c0f77faf3acb1011f8e975e6)
+++ b/.idea/progetto.iml	(date 1655816032383)
@@ -7,7 +7,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.10 (progetto)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.8" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
